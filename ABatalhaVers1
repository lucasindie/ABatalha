package Game;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JFrame;


public class ABatalhaVers1 extends JPanel implements KeyListener{
	 
	  
	Rectangle platform = new Rectangle(170, 34, 40, 50);
	
	private final int B_WIDTH = 350;
	private final int B_HEIGHT = 350;
	private final int INICIAL_X = 170;
	private final int INICIAL_Y= 34;
	private final int INICIAL_LARGURA = 40;
	private final int INICIAL_ALTURA = 50;
	private int x, y, largura, altura;
        private int player_x, player_y;
        private boolean cenario1Menu;
	private int largura_janela;
             private int coord_menuponteiro_y, menu_op;

	/*Nessa vers�o: "A Batalha vers�o 1" /_Lucas, o loop utilizado � o update do pacote Swing que � chamado automaticamente, a desvantagem dessa vers�o � a falta 
	 * de customiza��o da velocidade da anima��o. 
	 */
	public ABatalhaVers1() {
		 
                largura_janela = 500;
		setBounds(0, 0, largura_janela, 400);
		setBackground(Color.gray);
		setFocusable(true);
		
		
		x = INICIAL_X;
		y = INICIAL_Y;
		largura = INICIAL_LARGURA;
		altura = INICIAL_ALTURA;
                player_x = 150;
                player_y = 200;
                
                cenario1Menu = true;
                
                coord_menuponteiro_y = 135;
                menu_op = 1;
                
		 addKeyListener(this);
		
		 
	}

 
 public static void main(String[] args) {
	 
	ABatalhaVers1 gamemain = new ABatalhaVers1();
	 
	 
	 JFrame f = new JFrame("A Batalha versao 1 by: lucasindiesh1p.wordpress.com/");
		// f.setTitle("Game");
	 f.add(gamemain);
	 f.setSize(700, 500);
	 f.setLayout(null);
	 f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	 //f.pack(); //ajusta os componentes na dimens�o do jpanel  
	 f.setVisible(true);
 }
 
 
 @Override
 public void update(Graphics g) {
	 paint(g);
	 //desenharEfeito(g);
 }
 
 @Override
 public void paint(Graphics g) {

	 g.setColor(Color.BLACK);
	 g.fillRect(0, 0, getWidth(), getHeight());
         
	 g.setColor(Color.white);
	 g.setFont(new Font("Century Gothic", Font.BOLD, 10));
	 g.drawString("A Batalha - metodo de loop: usando somente o update automatico do Swing", 0, 10);
	 
         
         
         if(cenario1Menu == true){
	 g.setFont(new Font("Times new Roman", Font.BOLD, 20));
	 g.drawString("Novo Jogo (aperte enter para começar)", 50, 150);
         g.drawString("Carregar Jogo Salvo", 50, 175);
         g.drawString("Sair", 50, 195);
          //seletor de controle para usuário no menu
         g.setColor(Color.blue);
	g.fillOval(20, coord_menuponteiro_y, 10, 10);
        
         }
         
         if(cenario1Menu == false){
	g.setColor(Color.white);
	 g.setFont(new Font("Century Gothic", Font.BOLD, 10));
	 g.drawString("Aperte 'A' para ir para mover para esquerda ou 'D' para mover para direita", 0, 300);
	 
         
	g.setColor(Color.white);
	g.fillRect(platform.x, platform.y, platform.width, platform.height);
	
	g.setColor(Color.gray);
	g.fillOval(player_x, player_y, platform.width, platform.height);
	
	
      
       
	//efeito animado
	g.setColor(Color.orange);
	g.fillRect(x, y, largura, altura);
	
	
	//--
	x -=1;
	largura += 2;
	y -= 1;
	altura += 2;
	
	if(y <INICIAL_Y - 10) {
		y = INICIAL_Y;
		altura = INICIAL_ALTURA;
		
		if(x < INICIAL_X - 20)
			x = INICIAL_X;
			largura = INICIAL_LARGURA;
	
	}
        
         //colisao com a borda:
if(player_x>=largura_janela -45)
    player_x -= 20;

if(player_x<=0 +5)
    player_x += 20;



     }
	Toolkit.getDefaultToolkit().sync();//sem essa linha a anima��o n�o vai ficar boa no Linux.
	
		g.dispose();
		repaint();
 }


/*
@Override
public void actionPerformed(ActionEvent e) {
	x += 1;
	y += 1;
	if( y > B_HEIGHT) {
		y = INITIAL_Y;
		x = INITIAL_X;
	}
	repaint();
}
*/
  
 @Override
public void keyPressed(KeyEvent e) {
	 int c = e.getKeyCode();

	 if(c == KeyEvent.VK_A) {
		player_x -= 4;
	
	 }
	 if(c == KeyEvent.VK_D) {
		player_x += 4;
		
	 }
         
         if(c == KeyEvent.VK_W){
                coord_menuponteiro_y -= 25;
                
             if(coord_menuponteiro_y <= 135){
                 coord_menuponteiro_y = 135;

                 menu_op = 1;
                               }
             else{
            menu_op = 2;
             }
             
         }
         
         if(c== KeyEvent.VK_S){
             coord_menuponteiro_y += 25;
             
             if(coord_menuponteiro_y >= 185){
                 coord_menuponteiro_y = 185;
                 menu_op = 3;
             }
             else{
                 menu_op = 2;
                 if(coord_menuponteiro_y >= 185)
                 menu_op = 3;
                 
             }
         }
         
         if(c == KeyEvent.VK_ENTER){
              if(menu_op == 1){
                  //novo jogo
             if(cenario1Menu == true)
                 cenario1Menu = false;
               
             else
                 cenario1Menu = true;
          }
              if(menu_op == 2){
              //continuar
              }
              
              if(menu_op == 3){
              //Sair
               System.exit(0);
              }
         }
	 
}

    @Override
    public void keyTyped(KeyEvent ke) {
         
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        
    }
}
